import { Key } from './key.type';

interface EnumKeyMap {
  [key: string]: Key;
}

export const ENUM_KEY_MAP: EnumKeyMap = {
  Enter: Key.Enter,
  '.': Key.Period,
  ',': Key.Comma,
  '-': Key.Hyphen,
  '=': Key.Equal,
  ' ': Key.Space,

  ArrowLeft: Key.Left,
  ArrowUp: Key.Up,
  ArrowDown: Key.Down,
  ArrowRight: Key.Right,

  ')': Key.Zero,
  0: Key.Zero,
  '!': Key.One,
  1: Key.One,
  '@': Key.Two,
  2: Key.Two,
  '#': Key.Three,
  3: Key.Three,
  $: Key.Four,
  4: Key.Four,
  '%': Key.Five,
  5: Key.Five,
  '^': Key.Six,
  6: Key.Six,
  '&': Key.Seven,
  7: Key.Seven,
  '*': Key.Eight,
  8: Key.Eight,
  '(': Key.Nine,
  9: Key.Nine,

  A: Key.A,
  a: Key.A,
  B: Key.B,
  b: Key.B,
  C: Key.C,
  c: Key.C,
  D: Key.D,
  d: Key.D,
  E: Key.E,
  e: Key.E,
  F: Key.F,
  f: Key.F,
  G: Key.G,
  g: Key.G,
  H: Key.H,
  h: Key.H,
  I: Key.I,
  i: Key.I,
  J: Key.J,
  j: Key.J,
  K: Key.K,
  k: Key.K,
  L: Key.L,
  l: Key.L,
  M: Key.M,
  m: Key.M,
  N: Key.N,
  n: Key.N,
  O: Key.O,
  o: Key.O,
  P: Key.P,
  p: Key.P,
  Q: Key.Q,
  q: Key.Q,
  R: Key.R,
  r: Key.R,
  S: Key.S,
  s: Key.S,
  T: Key.T,
  t: Key.T,
  U: Key.U,
  u: Key.U,
  V: Key.V,
  v: Key.V,
  W: Key.W,
  w: Key.W,
  X: Key.X,
  x: Key.X,
  Y: Key.Y,
  y: Key.Y,
  Z: Key.Z,
  z: Key.Z,
};
